{"ast":null,"code":"import axios from'axios';var http=axios.create({baseURL:'https://tritium.work:5000',timeout:5000});// 添加请求拦截器\nhttp.interceptors.request.use(function(config){return config;},function(error){return Promise.reject(error);});// 添加响应拦截器\nhttp.interceptors.response.use(function(response){// 2xx 范围内的状态码都会触发该函数。\n// 对响应数据做点什么\nreturn response.data;},function(error){// 超出 2xx 范围的状态码都会触发该函数。\n// 对响应错误做点什么\nreturn Promise.reject(error);});export{http};","map":{"version":3,"names":["axios","http","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","data"],"sources":["C:/Users/NUC/my-project/src/utils/http.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n  baseURL: 'https://tritium.work:5000',\r\n  timeout: 5000\r\n})\r\n// 添加请求拦截器\r\nhttp.interceptors.request.use((config)=> {\r\n    return config\r\n  }, (error)=> {\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 添加响应拦截器\r\nhttp.interceptors.response.use((response)=> {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    return response.data\r\n  }, (error)=> {\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error)\r\n})\r\n\r\nexport { http }"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,IAAI,CAAGD,KAAK,CAACE,MAAM,CAAC,CACxBC,OAAO,CAAE,2BAA2B,CACpCC,OAAO,CAAE,IACX,CAAC,CAAC,CACF;AACAH,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,SAACC,MAAM,CAAI,CACrC,MAAO,CAAAA,MAAM,CACf,CAAC,CAAE,SAACC,KAAK,CAAI,CACX,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAChC,CAAC,CAAC,CAEF;AACAR,IAAI,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAC,SAACK,QAAQ,CAAI,CACxC;AACA;AACA,MAAO,CAAAA,QAAQ,CAACC,IAAI,CACtB,CAAC,CAAE,SAACJ,KAAK,CAAI,CACX;AACA;AACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAChC,CAAC,CAAC,CAEF,OAASR,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}