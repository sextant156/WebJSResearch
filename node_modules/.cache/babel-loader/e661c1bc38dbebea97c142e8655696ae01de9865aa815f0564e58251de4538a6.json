{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { http } from '@/utils';\nimport { useState } from 'react';\nimport cookie from 'react-cookies';\nclass MainStore {\n  // 组合器\n  constructor() {\n    this.ResultsInfo = {};\n    this.imgSrc = {};\n    //登录\n    this.getToken = async _ref => {\n      let {\n        username,\n        password\n      } = _ref;\n      const res = await http.post('https://tritium.work:5000/signin', {\n        username,\n        password\n      });\n      //存入token\n      this.token = res.token;\n      cookie.remove('Token');\n      cookie.save('Token', res.token, {\n        path: '/'\n      });\n    };\n    this.PushPrompts = async _ref2 => {\n      let {\n        token,\n        steps,\n        task_num,\n        task_detail\n      } = _ref2;\n      const ImageBack = await http.post('https://tritium.work:5000/upload_task', {\n        token,\n        task_num,\n        task_detail\n      });\n    };\n    this.getResultList = async _ref3 => {\n      let {\n        token\n      } = _ref3;\n      const ResultList = await http.post('https://tritium.work:5000/get_task_list', {\n        token\n      });\n      // 测试阶段，即插即拔\n      cookie.remove('OrderList');\n      cookie.save('OrderList', ResultList.task_name_list, {\n        path: '/'\n      });\n    };\n    this.getResult = async _ref4 => {\n      let {\n        token,\n        task_name\n      } = _ref4;\n      const Results = await http.post('https://tritium.work:5000//get_result', {\n        token,\n        task_name\n      });\n      // 测试阶段，即插即拔\n      // this.ResultsInfo = Results;\n      this.imgSrc = Results.result;\n    };\n    makeAutoObservable(this);\n  }\n}\nexport default MainStore;","map":{"version":3,"names":["makeAutoObservable","http","useState","cookie","MainStore","constructor","ResultsInfo","imgSrc","getToken","_ref","username","password","res","post","token","remove","save","path","PushPrompts","_ref2","steps","task_num","task_detail","ImageBack","getResultList","_ref3","ResultList","task_name_list","getResult","_ref4","task_name","Results","result"],"sources":["C:/Users/NUC/my-project/src/store/Main.Store.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { http } from '@/utils';\r\nimport { useState } from 'react';\r\nimport cookie from 'react-cookies'\r\nclass MainStore \r\n{\r\n  ResultsInfo = {};\r\n  imgSrc={};\r\n\r\n  // 组合器\r\n  constructor() \r\n  {\r\n    makeAutoObservable(this)\r\n  }\r\n  //登录\r\n  getToken = async ({ username, password }) => \r\n  {\r\n    \r\n    const res = await http.post('https://tritium.work:5000/signin', \r\n    {\r\n      username,\r\n      password\r\n    })\r\n    //存入token\r\n    this.token = res.token;\r\n    cookie.remove('Token');\r\n    cookie.save('Token',res.token,{path:'/'});\r\n  }\r\n  PushPrompts = async ({ token , steps , task_num , task_detail }) => \r\n  {\r\n    const ImageBack = await http.post('https://tritium.work:5000/upload_task', \r\n    {\r\n      token,\r\n      task_num,\r\n      task_detail,\r\n\r\n    })\r\n  };\r\n  getResultList = async({ token })=>\r\n  {\r\n    const  ResultList= await http.post('https://tritium.work:5000/get_task_list',\r\n    {\r\n      token,\r\n    })\r\n    // 测试阶段，即插即拔\r\n    cookie.remove('OrderList');\r\n    cookie.save('OrderList',ResultList.task_name_list,{path:'/'});\r\n  };\r\n  getResult = async ({ token , task_name}) => \r\n  {\r\n    const Results = await http.post('https://tritium.work:5000//get_result',\r\n    {\r\n      token,\r\n      task_name,\r\n    })\r\n    // 测试阶段，即插即拔\r\n    // this.ResultsInfo = Results;\r\n    this.imgSrc = Results.result;\r\n  };\r\n}\r\nexport default MainStore"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,eAAe;AAClC,MAAMC,SAAS,CACf;EAIE;EACAC,WAAWA,CAAA,EACX;IAAA,KALAC,WAAW,GAAG,CAAC,CAAC;IAAA,KAChBC,MAAM,GAAC,CAAC,CAAC;IAOT;IAAA,KACAC,QAAQ,GAAG,MAAAC,IAAA,IACX;MAAA,IADkB;QAAEC,QAAQ;QAAEC;MAAS,CAAC,GAAAF,IAAA;MAGtC,MAAMG,GAAG,GAAG,MAAMX,IAAI,CAACY,IAAI,CAAC,kCAAkC,EAC9D;QACEH,QAAQ;QACRC;MACF,CAAC,CAAC;MACF;MACA,IAAI,CAACG,KAAK,GAAGF,GAAG,CAACE,KAAK;MACtBX,MAAM,CAACY,MAAM,CAAC,OAAO,CAAC;MACtBZ,MAAM,CAACa,IAAI,CAAC,OAAO,EAACJ,GAAG,CAACE,KAAK,EAAC;QAACG,IAAI,EAAC;MAAG,CAAC,CAAC;IAC3C,CAAC;IAAA,KACDC,WAAW,GAAG,MAAAC,KAAA,IACd;MAAA,IADqB;QAAEL,KAAK;QAAGM,KAAK;QAAGC,QAAQ;QAAGC;MAAY,CAAC,GAAAH,KAAA;MAE7D,MAAMI,SAAS,GAAG,MAAMtB,IAAI,CAACY,IAAI,CAAC,uCAAuC,EACzE;QACEC,KAAK;QACLO,QAAQ;QACRC;MAEF,CAAC,CAAC;IACJ,CAAC;IAAA,KACDE,aAAa,GAAG,MAAAC,KAAA,IAChB;MAAA,IADsB;QAAEX;MAAM,CAAC,GAAAW,KAAA;MAE7B,MAAOC,UAAU,GAAE,MAAMzB,IAAI,CAACY,IAAI,CAAC,yCAAyC,EAC5E;QACEC;MACF,CAAC,CAAC;MACF;MACAX,MAAM,CAACY,MAAM,CAAC,WAAW,CAAC;MAC1BZ,MAAM,CAACa,IAAI,CAAC,WAAW,EAACU,UAAU,CAACC,cAAc,EAAC;QAACV,IAAI,EAAC;MAAG,CAAC,CAAC;IAC/D,CAAC;IAAA,KACDW,SAAS,GAAG,MAAAC,KAAA,IACZ;MAAA,IADmB;QAAEf,KAAK;QAAGgB;MAAS,CAAC,GAAAD,KAAA;MAErC,MAAME,OAAO,GAAG,MAAM9B,IAAI,CAACY,IAAI,CAAC,uCAAuC,EACvE;QACEC,KAAK;QACLgB;MACF,CAAC,CAAC;MACF;MACA;MACA,IAAI,CAACvB,MAAM,GAAGwB,OAAO,CAACC,MAAM;IAC9B,CAAC;IA9CChC,kBAAkB,CAAC,IAAI,CAAC;EAC1B;AA8CF;AACA,eAAeI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}