{"ast":null,"code":"import _defineProperty from \"C:/Users/NUC/my-project/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getStrokeColor } from './utils';\nvar CIRCLE_MIN_STROKE_WIDTH = 3;\nvar getMinPercent = function getMinPercent(width) {\n  return CIRCLE_MIN_STROKE_WIDTH / width * 100;\n};\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n    _props$width = props.width,\n    width = _props$width === void 0 ? 120 : _props$width,\n    _props$strokeWidth = props.strokeWidth,\n    strokeWidth = _props$strokeWidth === void 0 ? Math.max(getMinPercent(width), 6) : _props$strokeWidth,\n    _props$trailColor = props.trailColor,\n    trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n    _props$strokeLinecap = props.strokeLinecap,\n    strokeLinecap = _props$strokeLinecap === void 0 ? 'round' : _props$strokeLinecap,\n    gapPosition = props.gapPosition,\n    gapDegree = props.gapDegree,\n    type = props.type,\n    children = props.children,\n    success = props.success;\n  var circleStyle = {\n    width: width,\n    height: width,\n    fontSize: width * 0.15 + 6\n  };\n  var realGapDegree = React.useMemo(function () {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  var isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  var strokeColor = getStrokeColor({\n    success: success,\n    strokeColor: props.strokeColor\n  });\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  var circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, circleContent) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\n};\nexport default Circle;","map":{"version":3,"names":["classNames","Circle","RCCircle","React","Tooltip","getPercentage","getStrokeColor","CIRCLE_MIN_STROKE_WIDTH","getMinPercent","width","props","prefixCls","_props$width","_props$strokeWidth","strokeWidth","Math","max","_props$trailColor","trailColor","_props$strokeLinecap","strokeLinecap","gapPosition","gapDegree","type","children","success","circleStyle","height","fontSize","realGapDegree","useMemo","undefined","gapPos","isGradient","Object","prototype","toString","call","strokeColor","wrapperClassName","concat","_defineProperty","circleContent","createElement","percent","trailWidth","className","style","title","Fragment"],"sources":["C:/Users/NUC/my-project/node_modules/antd/es/progress/Circle.js"],"sourcesContent":["import classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getStrokeColor } from './utils';\nconst CIRCLE_MIN_STROKE_WIDTH = 3;\nconst getMinPercent = width => CIRCLE_MIN_STROKE_WIDTH / width * 100;\nconst Circle = props => {\n  const {\n    prefixCls,\n    width = 120,\n    strokeWidth = Math.max(getMinPercent(width), 6),\n    trailColor = null,\n    strokeLinecap = 'round',\n    gapPosition,\n    gapDegree,\n    type,\n    children,\n    success\n  } = props;\n  const circleStyle = {\n    width,\n    height: width,\n    fontSize: width * 0.15 + 6\n  };\n  const realGapDegree = React.useMemo(() => {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  const gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  const isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  const strokeColor = getStrokeColor({\n    success,\n    strokeColor: props.strokeColor\n  });\n  const wrapperClassName = classNames(`${prefixCls}-inner`, {\n    [`${prefixCls}-circle-gradient`]: isGradient\n  });\n  const circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, circleContent) : /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children));\n};\nexport default Circle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}