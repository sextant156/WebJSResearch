{"ast":null,"code":"import axios from 'axios';\nconst http = axios.create({\n  baseURL: 'http://geek.itheima.net/v1_0',\n  timeout: 5000\n});\n// 添加请求拦截器\nhttp.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\nhttp.interceptors.response.use(response => {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么\n  return response.data;\n}, error => {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport { http };","map":{"version":3,"names":["axios","http","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","data"],"sources":["C:/Users/NUC/my-project/src/utils/http.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n  baseURL: 'http://geek.itheima.net/v1_0',\r\n  timeout: 5000\r\n})\r\n// 添加请求拦截器\r\nhttp.interceptors.request.use((config)=> {\r\n    return config\r\n  }, (error)=> {\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 添加响应拦截器\r\nhttp.interceptors.response.use((response)=> {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    return response.data\r\n  }, (error)=> {\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error)\r\n})\r\n\r\nexport { http }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;EACxBC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;AACX,CAAC,CAAC;AACF;AACAH,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAI;EACrC,OAAOA,MAAM;AACf,CAAC,EAAGC,KAAK,IAAI;EACX,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACAR,IAAI,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAEK,QAAQ,IAAI;EACxC;EACA;EACA,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EAAGJ,KAAK,IAAI;EACX;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,SAASR,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}